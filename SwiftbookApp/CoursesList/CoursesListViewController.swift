//
//  CoursesListViewController.swift
//  SwiftbookApp
//
//  Created by Aleksandr Kretov on 10.07.2022.
//  Copyright (c) 2022 Alexey Efimov. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CoursesListDisplayLogic: AnyObject {
    func displayCourses(viewModel: CoursesList.DisplayCoursesList.ViewModel)
}

class CoursesListViewController: UIViewController {
    
    @IBOutlet var tableView: UITableView!
    
    var interactor: CoursesListBusinessLogic?
    var router: (NSObjectProtocol & CoursesListRoutingLogic & CoursesListDataPassing)?
    
    private var activityIndicator: UIActivityIndicatorView?
    private var rows: [CourseCellViewModelProtocol] = []
    
    // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        CourseListConfigurator.shared.configure(with: self)
        activityIndicator = showActivityIndicator(in: view)
        setupNavigationBar()
        viewLoaded()
    }
    
    // MARK: Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
        
    private func viewLoaded() {
        interactor?.loadCourses()
    }
    
    // MARK: Setup
    private func setup() {
        CourseListConfigurator.shared.configure(with: self)
    }
    
    private func setupNavigationBar() {
        let navBarAppearence = UINavigationBarAppearance()
        navBarAppearence.configureWithOpaqueBackground()
        navBarAppearence.titleTextAttributes = [.foregroundColor: UIColor.white]
        navBarAppearence.largeTitleTextAttributes = [.foregroundColor: UIColor.white]
        navBarAppearence.backgroundColor = .blue
        navigationController?.navigationBar.standardAppearance = navBarAppearence
        navigationController?.navigationBar.scrollEdgeAppearance = navBarAppearence
    }
    
    private func showActivityIndicator(in view: UIView) -> UIActivityIndicatorView {
        let indicator = UIActivityIndicatorView(style: .large)
        indicator.color = .black
        indicator.startAnimating()
        indicator.center = view.center
        indicator.hidesWhenStopped = true
        view.addSubview(indicator)
        return indicator
    }
}

extension CoursesListViewController: CoursesListDisplayLogic {
    func displayCourses(viewModel: CoursesList.DisplayCoursesList.ViewModel) {
        rows = viewModel.rows
        activityIndicator?.stopAnimating()
        tableView.reloadData()
    }
}

extension CoursesListViewController: UITableViewDataSource, UITableViewDelegate {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        rows.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cellViewModel = rows[indexPath.row]
        let cell = tableView.dequeueReusableCell(withIdentifier: cellViewModel.identifier, for: indexPath) as! CourseTableViewCell
        cell.viewModel = cellViewModel 
        return cell
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        rows[indexPath.row].height
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView.deselectRow(at: indexPath, animated: true)
    }
}
